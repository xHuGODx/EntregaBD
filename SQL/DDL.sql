IF OBJECT_ID ('VALO_PLAYERSTATS','U') IS NOT NULL
    DROP TABLE dbo.VALO_PLAYERSTATS;
IF OBJECT_ID ('VALO_GAME','U') IS NOT NULL
    DROP TABLE dbo.VALO_GAME;
IF OBJECT_ID ('VALO_MATCH','U') IS NOT NULL
    DROP TABLE dbo.VALO_MATCH;
IF OBJECT_ID ('VALO_AGENT','U') IS NOT NULL
    DROP TABLE dbo.VALO_AGENT;
IF OBJECT_ID ('VALO_HAS','U') IS NOT NULL
    DROP TABLE dbo.VALO_HAS;
IF OBJECT_ID ('VALO_ROLE','U') IS NOT NULL
    DROP TABLE dbo.VALO_ROLE;
IF OBJECT_ID ('VALO_PLAYER','U') IS NOT NULL
    DROP TABLE dbo.VALO_PLAYER;
IF OBJECT_ID ('VALO_COACH','U') IS NOT NULL
    DROP TABLE dbo.VALO_COACH;
IF OBJECT_ID ('VALO_TEAM','U') IS NOT NULL
    DROP TABLE dbo.VALO_TEAM;
IF OBJECT_ID ('VALO_CONTRACT','U') IS NOT NULL
    DROP TABLE dbo.VALO_CONTRACT;
IF OBJECT_ID ('VALO_PERSON','U') IS NOT NULL
    DROP TABLE dbo.VALO_PERSON;
IF OBJECT_ID ('VALO_LOGIN','U') IS NOT NULL
    DROP TABLE dbo.VALO_LOGIN;


-- Creating Person table 
CREATE TABLE VALO_PERSON
(
    CC_Number INT NOT NULL check(len(CC_Number) = 8),
    [Nome] VARCHAR(50) NOT NULL,
    Age INT NOT NULL check(Age > 0),

    PRIMARY KEY (CC_Number)
);

-- Creating Team table
CREATE TABLE VALO_TEAM
(
    Team_ID INT NOT NULL,
    [Nome] VARCHAR(50) NOT NULL,
    Foundation_Date DATE NOT NULL,

    PRIMARY KEY(Team_ID)
);

-- Creating Coach table 
CREATE TABLE VALO_COACH
(
    PERSON_CC_Number INT NOT NULL,
    Team_ID INT					,

    PRIMARY KEY (PERSON_CC_Number),
    FOREIGN KEY (PERSON_CC_Number)	REFERENCES VALO_PERSON(CC_Number),
    FOREIGN KEY (Team_ID)			REFERENCES VALO_TEAM(Team_ID)
);

-- Creating Player table 
CREATE TABLE VALO_PLAYER
(
    PERSON_CC_Number INT NOT NULL,
    [Nickname] VARCHAR(30) NOT NULL,
    Team_ID INT ,

    PRIMARY KEY (PERSON_CC_Number),
    FOREIGN KEY (PERSON_CC_Number)	REFERENCES VALO_PERSON(CC_Number),
    FOREIGN KEY (Team_ID)			REFERENCES VALO_TEAM(Team_ID),

    UNIQUE ([Nickname])
);

-- Creating Roles table 
CREATE TABLE VALO_ROLE
(
    Role_Name VARCHAR(20) NOT NULL,

    PRIMARY KEY (Role_Name)
);

-- Creating Has table 
CREATE TABLE VALO_HAS
(
    PLAYER_CC_Number INT NOT NULL,
    ROLE_Role_Name VARCHAR(20) NOT NULL,

    PRIMARY KEY (PLAYER_CC_Number, ROLE_Role_Name),
    FOREIGN KEY (PLAYER_CC_Number) REFERENCES VALO_PLAYER(PERSON_CC_Number),
    FOREIGN KEY (ROLE_Role_Name) REFERENCES VALO_ROLE(Role_Name)
);

-- Creating Agent table 
CREATE TABLE VALO_AGENT
(
    Agent_Name VARCHAR(20) NOT NULL,
    ROLE_Role_Name VARCHAR(20) NOT NULL,

    PRIMARY KEY (Agent_Name),
    FOREIGN KEY (ROLE_Role_Name)	REFERENCES VALO_ROLE(Role_Name)
);

-- Creating Match table 
CREATE TABLE VALO_MATCH
(
    Match_ID INT NOT NULL,
    Team_1_ID INT NOT NULL,
    Team_2_ID INT NOT NULL,

    PRIMARY KEY (Match_ID),
    FOREIGN KEY (Team_1_ID) REFERENCES VALO_TEAM(Team_ID),
    FOREIGN KEY (Team_2_ID) REFERENCES VALO_TEAM(Team_ID)
);

-- Creating Game table 
CREATE TABLE VALO_GAME
(
    Game_ID INT NOT NULL,
    Rounds_Won_Team_1 INT NOT NULL,
    Rounds_Won_Team_2 INT NOT NULL,
    MATCH_Match_ID INT NOT NULL,
    Map VARCHAR(20) NOT NULL,

    PRIMARY KEY (Game_ID, MATCH_Match_ID),
    FOREIGN KEY (MATCH_Match_ID) REFERENCES VALO_MATCH(Match_ID)
);

-- Creating PlayerStats table 
CREATE TABLE VALO_PLAYERSTATS
(
    PLAYER_CC_Number INT NOT NULL,
    GAME_Match_ID INT NOT NULL,
    GAME_Game_ID INT NOT NULL,
    Kills INT NOT NULL,
    Deaths INT NOT NULL,
    Assists INT NOT NULL,
    AVS DECIMAL(5, 2) NOT NULL,
    Rating INT NOT NULL,
    First_kills INT NOT NULL,
    AGENT_Agent_Name VARCHAR(20) NOT NULL,
    PRIMARY KEY (PLAYER_CC_Number, GAME_Match_ID, Game_Game_ID),
    FOREIGN KEY (PLAYER_CC_Number) REFERENCES VALO_PLAYER(PERSON_CC_Number),
    FOREIGN KEY (GAME_Game_ID, GAME_Match_ID) REFERENCES VALO_GAME(Game_ID, MATCH_Match_ID),
    FOREIGN KEY (AGENT_Agent_Name) REFERENCES VALO_AGENT(Agent_Name)
);

CREATE TABLE VALO_LOGIN (
    username VARCHAR(50) PRIMARY KEY,
    passwordhash VARCHAR(255),
    role VARCHAR(50)
);

